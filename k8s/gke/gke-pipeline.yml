name: '$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)'
trigger:
  branches:
    include:
      - develop
      - master
      - release
      - feature/*
      - hotfix/*
      - topic
      - test/*
resources:
  - repo: self
variables:
  domain: pe.farmaciasperuanas
  projectname: gcp
  nameapp: gcp-redis
  serviceapp: ms
  typeapp: util
  owner: fps
  vmImageName: ubuntu-20.04
  vmImagePool: OnPremise - Farmacias Peruanas
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  PORT: 8080
  KUBECTL_VERSION: 1.19.0
  PROFILE_CI: ci
  PROFILE_QAS: qa
  PROFILE_UAT: uat
  PROFILE_PRD: prd
  NAMESPACE: util
  GCP_REGISTRY_DEV: GCP-REGISTRY-FP-DEV-DIG
  GCP_PROJECT_DEV: fp-dev-dig-project
  GCP_GKE_DEV: GCP-GKE-FP-DEV-DIG
  GCP_REGISTRY_QAS: GCP-REGISTRY-FP-QAS-DIG
  GCP_PROJECT_QAS: fp-qas-dig-project
  GCP_GKE_QAS: GCP-GKE-FP-QAS-DIG
  GCP_REGISTRY_UAT: GCP-REGISTRY-FP-UAT-DIG
  GCP_PROJECT_UAT: fp-uat-dig-project
  GCP_GKE_UAT: GCP-GKE-FP-UAT-DIG
  GCP_REGISTRY_PRD: GCP-REGISTRY-FP-PRD-DIG
  GCP_PROJECT_PRD: fp-prd-dig-project
  GCP_GKE_PRD: GCP-GKE-FP-PRD-DIG
stages:
  - stage: compileAndScan
    displayName: compileAndScan
    jobs:
      - job: compileJob
        displayName: compileJob
        continueOnError: false
        pool:
          vmImage: $(vmImageName)
        steps:
          - bash: |
              ccommit="$(Build.SourceVersion)"
              echo "##vso[task.setvariable variable=tag]${ccommit:0:8}"
            displayName: createTag
            name: createTag
          - bash: |
              #fullbranch=$(Build.SourceBranch)
              #echo "##vso[task.setvariable variable=branch]${fullbranch:11}"
            displayName: readBranch
            name: readBranch
          - task: SonarCloudPrepare@1
            displayName: prepareAnalisisSonarCloud
            name: prepareAnalisisSonarCloudmaster
            condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
            inputs:
              SonarCloud: SONARCLOUD-FARMACIAS
              organization: farmacias-ti
              scannerMode: CLI
              projectKey: '$(domain).$(projectname):$(owner)-$(typeapp)-$(nameapp)'
              projectName: $(owner)-$(typeapp)-$(nameapp)
              extraProperties: |
                sonar.projectKey=$(domain).$(projectname):$(owner)-$(typeapp)-$(nameapp)
                sonar.projectName=$(owner)-$(typeapp)-$(nameapp)
                sonar.projectVersion=$(tag)
                sonar.java.coveragePlugin="jacoco"
                sonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
                sonar.sourceEncoding=UTF-8
                sonar.sources=src/main/java
                sonar.tests=src/test/java
                sonar.java.source=11
                sonar.java.binaries=target/classes
                sonar.java.test.binaries=target/test-classes
                sonar.test=target/test-classes
                sonar.branch.name=$(branch)
              enabled: false
          - task: Maven@3
            displayName: mvnCompile
            name: mvnCompile
            inputs:
              goals: clean test
              sonarQubeRunAnalysis: false
              sqMavenPluginVersionChoice: latest
              options: $(MAVEN_OPTS)
              javaHomeOption: JDKVersion
              jdkVersionOption: '1.11'
          - publish: k8s
            artifact: k8s
  - stage: devDeploy
    displayName: devDeploy
    condition: >-
      and(succeeded('compileAndScan'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
    jobs:
      - job: buildJobDev
        displayName: buildJob Dev
        continueOnError: false
        pool:
          vmImage: $(vmImageName)
        steps:
          - bash: |
              ccommit="$(Build.SourceVersion)"
              echo "##vso[task.setvariable variable=tag]${ccommit:0:8}"
            displayName: setvariables
            name: setvariables
          - task: Cache@2
            inputs:
              key: maven | "$(Agent.OS)" | **/pom.xml
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo
          - task: Maven@3
            displayName: mvnPackage
            name: mvnPackage
            inputs:
              goals: clean package
              sqMavenPluginVersionChoice: latest
              options: $(MAVEN_OPTS)
              javaHomeOption: JDKVersion
              jdkVersionOption: '1.11'
          - task: Docker@2
            displayName: 'Push and Push Image'
            inputs:
              command: buildAndPush
              containerRegistry: $(GCP_REGISTRY_DEV)
              repository: '$(GCP_PROJECT_DEV)/$(owner)-$(typeapp)-$(serviceapp)-$(nameapp)'
              tags: $(tag)
      - deployment: devDeploy
        displayName: devDeploy
        dependsOn: buildJobDev
        environment: development
        pool:
          vmImage: $(vmImageName)
        variables:
          subdomain: dev-$(nameapp)-ms
          domain: solucionesdigitalfps.com
          secret: solucionesdigitalfps-com
        strategy:
          runOnce:
            deploy:
              steps:
                - bash: |
                    curl ifconfig.co
                  displayName: publicIp
                  name: publicIp
                - task: KubectlInstaller@0
                  displayName: Kubectl installer
                  inputs:
                    kubectlVersion: $(KUBECTL_VERSION)
                - download: current
                  artifact: k8s
                - bash: |
                    ccommit="$(Build.SourceVersion)"
                    echo "##vso[task.setvariable variable=tag]${ccommit:0:8}"
                  displayName: setvariables
                  name: setvariables
                - bash: |
                    sed -i 's/#{PROJECT}/$(GCP_PROJECT_DEV)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{TAG}/$(tag)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{PORT}/$(PORT)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{PROFILE}/$(PROFILE_CI)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{NAMESPACE}/$(NAMESPACE)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{SUBDOMAIN}/$(subdomain)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{DOMAIN}/$(domain)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{SECRET}/$(secret)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                  displayName: replaceParameters
                  name: replaceParameters
                - task: Kubernetes@1
                  displayName: kubectl apply
                  inputs:
                    connectionType: Kubernetes Service Connection
                    kubernetesServiceEndpoint: $(GCP_GKE_DEV)
                    command: apply
                    arguments: -f $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    versionOrLocation: version
                    versionSpec: $(KUBECTL_VERSION)
  - stage: qaDeploy
    displayName: qaDeploy
    condition: >-
      and(succeeded('compileAndScan'), eq(variables['Build.SourceBranch'], 'refs/heads/topic'))
    jobs:
      - job: buildJobQas
        displayName: buildJob Qas
        continueOnError: false
        pool:
          vmImage: $(vmImageName)
        steps:
          - bash: |
              ccommit="$(Build.SourceVersion)"
              echo "##vso[task.setvariable variable=tag]${ccommit:0:8}"
            displayName: setvariables
            name: setvariables
          - task: Cache@2
            inputs:
              key: maven | "$(Agent.OS)" | **/pom.xml
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo
          - task: Maven@3
            displayName: mvnPackage
            name: mvnPackage
            inputs:
              goals: clean package
              sqMavenPluginVersionChoice: latest
              options: $(MAVEN_OPTS)
              javaHomeOption: JDKVersion
              jdkVersionOption: '1.11'
          - task: Docker@2
            displayName: 'Push and Push Image'
            inputs:
              command: buildAndPush
              containerRegistry: $(GCP_REGISTRY_QAS)
              repository: '$(GCP_PROJECT_QAS)/$(owner)-$(typeapp)-$(serviceapp)-$(nameapp)'
              tags: $(tag)
      - deployment: qaDeploy
        displayName: qaDeploy
        dependsOn: buildJobQas
        environment: testing
        pool:
          vmImage: $(vmImageName)
        variables:
          subdomain: qas-$(nameapp)-ms
          domain: solucionesdigitalfps.com
          secret: solucionesdigitalfps-com
        strategy:
          runOnce:
            deploy:
              steps:
                - task: KubectlInstaller@0
                  displayName: Kubectl installer
                  inputs:
                    kubectlVersion: $(KUBECTL_VERSION)
                - download: current
                  artifact: k8s
                - bash: |
                    ccommit="$(Build.SourceVersion)"
                    echo "##vso[task.setvariable variable=tag]${ccommit:0:8}"
                  displayName: setvariables
                  name: setvariables
                - bash: |
                    sed -i 's/#{PROJECT}/$(GCP_PROJECT_QAS)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{TAG}/$(tag)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{PORT}/$(PORT)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{PROFILE}/$(PROFILE_QAS)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{NAMESPACE}/$(NAMESPACE)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{SUBDOMAIN}/$(subdomain)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{DOMAIN}/$(domain)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{SECRET}/$(secret)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                  displayName: replaceParameters
                  name: replaceParameters
                - task: Kubernetes@1
                  displayName: kubectl apply
                  inputs:
                    connectionType: Kubernetes Service Connection
                    kubernetesServiceEndpoint: $(GCP_GKE_QAS)
                    command: apply
                    arguments: -f $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    versionOrLocation: version
                    versionSpec: $(KUBECTL_VERSION)
  - stage: uatDeploy
    displayName: uatDeploy
    condition: >-
      and(succeeded('compileAndScan'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - job: buildJobUat
        displayName: buildJob Uat
        continueOnError: false
        pool:
          vmImage: $(vmImageName)
        steps:
          - bash: |
              ccommit="$(Build.SourceVersion)"
              echo "##vso[task.setvariable variable=tag]${ccommit:0:8}"
            displayName: setvariables
            name: setvariables
          - task: Cache@2
            inputs:
              key: maven | "$(Agent.OS)" | **/pom.xml
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo
          - task: Maven@3
            displayName: mvnPackage
            name: mvnPackage
            inputs:
              goals: clean package
              sqMavenPluginVersionChoice: latest
              options: $(MAVEN_OPTS)
              javaHomeOption: JDKVersion
              jdkVersionOption: '1.11'
          - task: Docker@2
            displayName: 'build Image'
            inputs:
              command: buildAndPush
              containerRegistry: $(GCP_REGISTRY_UAT)
              repository: '$(GCP_PROJECT_UAT)/$(owner)-$(typeapp)-$(serviceapp)-$(nameapp)'
              tags: $(tag)
      - deployment: uatDeploy
        displayName: uatDeploy
        dependsOn: buildJobUat
        environment: uat
        pool:
          vmImage: $(vmImageName)
        variables:
          subdomain: uat-$(nameapp)-ms
          domain: solucionesdigitalfps.com
          secret: solucionesdigitalfps-com
        strategy:
          runOnce:
            deploy:
              steps:
                - task: KubectlInstaller@0
                  displayName: Kubectl installer
                  inputs:
                    kubectlVersion: $(KUBECTL_VERSION)
                - download: current
                  artifact: k8s
                - bash: |
                    ccommit="$(Build.SourceVersion)"
                    echo "##vso[task.setvariable variable=tag]${ccommit:0:8}"
                  displayName: setvariables
                  name: setvariables
                - bash: |
                    sed -i 's/#{PROJECT}/$(GCP_PROJECT_UAT)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{TAG}/$(tag)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{PORT}/$(PORT)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{PROFILE}/$(PROFILE_UAT)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{NAMESPACE}/$(NAMESPACE)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{SUBDOMAIN}/$(subdomain)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{DOMAIN}/$(domain)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{SECRET}/$(secret)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                  displayName: replaceParameters
                  name: replaceParameters
                - task: Kubernetes@1
                  displayName: kubectl apply
                  inputs:
                    connectionType: Kubernetes Service Connection
                    kubernetesServiceEndpoint: $(GCP_GKE_UAT)
                    command: apply
                    arguments: -f $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    versionOrLocation: version
                    versionSpec: $(KUBECTL_VERSION)
  - stage: prdDeploy
    displayName: prdDeploy
    condition: >-
      and(succeeded('compileAndScan'), eq(variables['Build.SourceBranch'], 'refs/heads/release'))
    jobs:
      - job: buildJobPrd
        displayName: buildJob Prd
        continueOnError: false
        pool:
          vmImage: $(vmImageName)
        steps:
          - bash: |
              ccommit="$(Build.SourceVersion)"
              echo "##vso[task.setvariable variable=tag]${ccommit:0:8}"
            displayName: setvariables
            name: setvariables
          - task: Cache@2
            inputs:
              key: maven | "$(Agent.OS)" | **/pom.xml
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo
          - task: Maven@3
            displayName: mvnPackage
            name: mvnPackage
            inputs:
              goals: clean package
              sqMavenPluginVersionChoice: latest
              options: $(MAVEN_OPTS)
              javaHomeOption: JDKVersion
              jdkVersionOption: '1.11'
          - task: Docker@2
            displayName: 'build Image'
            inputs:
              command: buildAndPush
              containerRegistry: $(GCP_REGISTRY_PRD)
              repository: '$(GCP_PROJECT_PRD)/$(owner)-$(typeapp)-$(serviceapp)-$(nameapp)'
              tags: $(tag)
      - deployment: prdDeploy
        displayName: prdDeploy
        dependsOn: buildJobPrd
        environment: production
        pool:
          vmImage: $(vmImageName)
        variables:
          subdomain: $(nameapp)-ms
          domain: farmaciasperuanas.pe
          secret: farmaciasperuanas-pe
        strategy:
          runOnce:
            deploy:
              steps:
                - task: KubectlInstaller@0
                  displayName: Kubectl installer
                  inputs:
                    kubectlVersion: $(KUBECTL_VERSION)
                - download: current
                  artifact: k8s
                - bash: |
                    ccommit="$(Build.SourceVersion)"
                    echo "##vso[task.setvariable variable=tag]${ccommit:0:8}"
                  displayName: setvariables
                  name: setvariables
                - bash: |
                    sed -i 's/#{PROJECT}/$(GCP_PROJECT_PRD)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{TAG}/$(tag)/g' $(Pipeline.Workspace)/k8s/egke/gke-deployment.yml
                    sed -i 's/#{PORT}/$(PORT)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{PROFILE}/$(PROFILE_PRD)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{NAMESPACE}/$(NAMESPACE)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{SUBDOMAIN}/$(subdomain)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{DOMAIN}/$(domain)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    sed -i 's/#{SECRET}/$(secret)/g' $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                  displayName: replaceParameters
                  name: replaceParameters
                - task: Kubernetes@1
                  displayName: kubectl apply
                  inputs:
                    connectionType: Kubernetes Service Connection
                    kubernetesServiceEndpoint: $(GCP_GKE_PRD)
                    command: apply
                    arguments: -f $(Pipeline.Workspace)/k8s/gke/gke-deployment.yml
                    versionOrLocation: version
                    versionSpec: $(KUBECTL_VERSION)
